from entity_gen.outputter import *

class AndroidGenerator(object):
    head = []
    buf = []
    tail = []
    gson = []
    name = None

    def __init__(self, package, dest_dir):
        self.package = package
        self.dest_dir = dest_dir

    def startEntity(self, name):
        self.name = name
        self.head += [
            '/**',
            ' * This file is machine-generated by entity_gen.py. DO NOT EDIT !',
            ' */',
            BlankLine(),
            'package ' + self.package + ';',
            BlankLine(),
            'import java.util.List;',
            'import java.util.ArrayList;',
            'import com.google.gson.JsonElement;',
            'import com.google.gson.JsonObject;',
            'import com.google.gson.JsonArray;',
            BlankLine(),
            'public class %s {' % name,
            Indent(),
        ]

        self.gson += [
            'public %s(JsonObject element) {' % name,
            Indent(),
        ]

    def finishEntity(self):
        self.tail.append(Unindent())
        self.tail.append('}')

        self.gson += [
            Unindent(),
            '}',
        ]

        with open(self.dest_dir + '/' + self.name + '.java', 'w') as f:
            outputter = Outputter(f)
            for line in self.head + self.gson + self.buf + self.tail:
                outputter(line)

        self.head = []
        self.buf = []
        self.tail = []
        self.gson = []

    def addProperty(self, prop):
        prop.accept(self)

    def addObject(self, name, ref):
        self.buf += [
            BlankLine(),
            'private ' + ref.name + ' ' + name + ';',
            BlankLine(),
            'public ' + ref.name + ' get' + self.capitalize(name) + '() {',
            '    return this.' + name + ';',
            '}',
            BlankLine(),
            'public void set' + self.capitalize(name) + '(' + ref.name + ' value) {',
            '    this.' + name + ' = value;',
            '}',
        ]

        self.gson += [
            'this.' + name + ' = new ' + ref.name + '(element.get("' + name + '").getAsJsonObject());',
        ]

    def addArray(self, name, ref):
        self.buf += [
            BlankLine(),
            'private List<' + ref.name + '> ' + name + ';',
            BlankLine(),
            'public List<' + ref.name + '> get' + self.capitalize(name) + '() {',
            '    return this.' + name + ';',
            '}',
            BlankLine(),
            'public void set' + self.capitalize(name) + '(List<' + ref.name + '> value) {',
            '    this.' + name + ' = value;',
            '}',
        ]

        self.gson += [
            'this.' + name + ' = new ArrayList<>();',
            'for (JsonElement item : element.get("' + name + '").getAsJsonArray()) {',
            Indent(),
            'this.' + name + '.add(new ' + ref.name + '((JsonObject) item));',
            Unindent(),
            '}',
        ]

    def addInteger(self, name):
        self.buf += [
            BlankLine(),
            'private int ' + name + ';',
            BlankLine(),
            'public int get' + self.capitalize(name) + '() {',
            '    return this.' + name + ';',
            '}',
            BlankLine(),
            'public void set' + self.capitalize(name) + '(int value) {',
            '    this.' + name + ' = value;',
            '}',
        ]

        self.gson += [
            'this.' + name + ' = element.get("' + name + '").getAsInt();',
        ]

    def addString(self, name):
        self.buf += [
            BlankLine(),
            'private String ' + name + ';',
            BlankLine(),
            'public String get' + self.capitalize(name) + '() {',
            '    return this.' + name + ';',
            '}',
            BlankLine(),
            'public void set' + self.capitalize(name) + '(String value) {',
            '    this.' + name + ' = value;',
            '}',
        ]

        self.gson += [
            'this.' + name + ' = element.get("' + name + '").getAsString();',
        ]

    def capitalize(self, name):
        return name[0].upper() + name[1:]
